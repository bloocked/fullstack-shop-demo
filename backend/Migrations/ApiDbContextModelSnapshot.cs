// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("backend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "pass1",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Password = "pass2",
                            Username = "user2"
                        },
                        new
                        {
                            Id = 3,
                            Password = "pass3",
                            Username = "user3"
                        },
                        new
                        {
                            Id = 4,
                            Password = "pass4",
                            Username = "user4"
                        },
                        new
                        {
                            Id = 5,
                            Password = "pass5",
                            Username = "user5"
                        },
                        new
                        {
                            Id = 6,
                            Password = "pass6",
                            Username = "user6"
                        },
                        new
                        {
                            Id = 7,
                            Password = "pass7",
                            Username = "user7"
                        },
                        new
                        {
                            Id = 8,
                            Password = "pass8",
                            Username = "user8"
                        },
                        new
                        {
                            Id = 9,
                            Password = "pass9",
                            Username = "user9"
                        },
                        new
                        {
                            Id = 10,
                            Password = "pass10",
                            Username = "user10"
                        },
                        new
                        {
                            Id = 11,
                            Password = "pass11",
                            Username = "user11"
                        },
                        new
                        {
                            Id = 12,
                            Password = "pass12",
                            Username = "user12"
                        },
                        new
                        {
                            Id = 13,
                            Password = "pass13",
                            Username = "user13"
                        },
                        new
                        {
                            Id = 14,
                            Password = "pass14",
                            Username = "user14"
                        },
                        new
                        {
                            Id = 15,
                            Password = "pass15",
                            Username = "user15"
                        },
                        new
                        {
                            Id = 16,
                            Password = "pass16",
                            Username = "user16"
                        },
                        new
                        {
                            Id = 17,
                            Password = "pass17",
                            Username = "user17"
                        },
                        new
                        {
                            Id = 18,
                            Password = "pass18",
                            Username = "user18"
                        },
                        new
                        {
                            Id = 19,
                            Password = "pass19",
                            Username = "user19"
                        },
                        new
                        {
                            Id = 20,
                            Password = "pass20",
                            Username = "user20"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
